
name: Check and update ArgoCD Helm chart version

on:
  schedule:
    - cron: '0 9 * * 1'

jobs:
  check-version:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Format Terraform scripts
      id: fmt
      run: terraform fmt -check
      continue-on-error: true

    - name: Initialize Terraform
      id: init
      run: terraform init

    - name: Validate Terraform scripts
      id: validate
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color
      continue-on-error: true

    - name: Get latest Helm chart version from ArtifactHub
      id: get_latest_version
      run: |
        latest_chart_version=$(curl -s https://artifacthub.io/api/v1/packages/helm/argo/argo-cd | jq -r '.version')
        latest_app_version=$(curl -s https://artifacthub.io/api/v1/packages/helm/argo/argo-cd | jq -r '.app_version')
        echo "Latest ArgoCD Helm version: $latest_chart_version"
        echo "Latest ArgoCD App version: $latest_app_version"
        echo "latest_chart_version=$latest_chart_version" >> $GITHUB_ENV
        echo "latest_app_version=$latest_app_version" >> $GITHUB_ENV

    - name: Update version in variables.tf if necessary
      id: compare_versions
      run: |
        terraform plan -out=tfplan
        terraform show -json tfplan > plan.json
        
        current_chart_version=$(jq -r '.variables.argo_cd_chart_version.value' plan.json)
        latest_chart_version="${{ env.latest_chart_version }}"
        current_app_version=$(jq -r '.variables.argo_cd_image_global_version.value' plan.json)
        latest_app_version="${{ env.latest_app_version }}"
        
        echo "Current Helm chart version: $current_chart_version"
        echo "Latest Helm chart version: $latest_chart_version"
        echo "Current App version: $current_app_version"
        echo "Latest App version: $latest_app_version"
        
        echo "update_version=false" >> $GITHUB_ENV
        cat variables.tf | grep -A 4 -B 4 argo_cd_chart_version
        
        if [[ "$latest_chart_version" != "$current_chart_version" || "$latest_app_version" != "$current_app_version" ]]; then
          echo "update_version=true" >> $GITHUB_ENV
          if [[ "$latest_chart_version" != "$current_chart_version" ]]; then
            echo "Updating Helm chart to $latest_chart_version"
            sed -i "s/$current_chart_version/$latest_chart_version/" variables.tf
          fi
          
          if [[ "$latest_app_version" != "$current_app_version" ]]; then
            echo "Updating App to $latest_app_version"
            sed -i "s/$current_app_version/$latest_app_version/" variables.tf
          fi

        else
          echo "Already up-to-date"
        fi

        cat variables.tf | grep -A 4 -B 4 argo_cd_chart_version